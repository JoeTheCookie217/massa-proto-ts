// source: operation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.massa.api.v1.CallSC', null, global);
goog.exportSymbol('proto.massa.api.v1.ExecuteSC', null, global);
goog.exportSymbol('proto.massa.api.v1.Operation', null, global);
goog.exportSymbol('proto.massa.api.v1.OperationStatus', null, global);
goog.exportSymbol('proto.massa.api.v1.OperationType', null, global);
goog.exportSymbol('proto.massa.api.v1.OperationWrapper', null, global);
goog.exportSymbol('proto.massa.api.v1.RollBuy', null, global);
goog.exportSymbol('proto.massa.api.v1.RollSell', null, global);
goog.exportSymbol('proto.massa.api.v1.SignedOperation', null, global);
goog.exportSymbol('proto.massa.api.v1.Transaction', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.massa.api.v1.Operation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.massa.api.v1.Operation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.massa.api.v1.Operation.displayName = 'proto.massa.api.v1.Operation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.massa.api.v1.OperationType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.massa.api.v1.OperationType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.massa.api.v1.OperationType.displayName = 'proto.massa.api.v1.OperationType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.massa.api.v1.Transaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.massa.api.v1.Transaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.massa.api.v1.Transaction.displayName = 'proto.massa.api.v1.Transaction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.massa.api.v1.RollBuy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.massa.api.v1.RollBuy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.massa.api.v1.RollBuy.displayName = 'proto.massa.api.v1.RollBuy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.massa.api.v1.RollSell = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.massa.api.v1.RollSell, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.massa.api.v1.RollSell.displayName = 'proto.massa.api.v1.RollSell';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.massa.api.v1.ExecuteSC = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.massa.api.v1.ExecuteSC.repeatedFields_, null);
};
goog.inherits(proto.massa.api.v1.ExecuteSC, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.massa.api.v1.ExecuteSC.displayName = 'proto.massa.api.v1.ExecuteSC';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.massa.api.v1.CallSC = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.massa.api.v1.CallSC, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.massa.api.v1.CallSC.displayName = 'proto.massa.api.v1.CallSC';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.massa.api.v1.SignedOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.massa.api.v1.SignedOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.massa.api.v1.SignedOperation.displayName = 'proto.massa.api.v1.SignedOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.massa.api.v1.OperationWrapper = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.massa.api.v1.OperationWrapper.repeatedFields_, null);
};
goog.inherits(proto.massa.api.v1.OperationWrapper, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.massa.api.v1.OperationWrapper.displayName = 'proto.massa.api.v1.OperationWrapper';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.massa.api.v1.Operation.prototype.toObject = function(opt_includeInstance) {
  return proto.massa.api.v1.Operation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.massa.api.v1.Operation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.Operation.toObject = function(includeInstance, msg) {
  var f, obj = {
    fee: jspb.Message.getFieldWithDefault(msg, 1, 0),
    expirePeriod: jspb.Message.getFieldWithDefault(msg, 2, 0),
    op: (f = msg.getOp()) && proto.massa.api.v1.OperationType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.massa.api.v1.Operation}
 */
proto.massa.api.v1.Operation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.massa.api.v1.Operation;
  return proto.massa.api.v1.Operation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.massa.api.v1.Operation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.massa.api.v1.Operation}
 */
proto.massa.api.v1.Operation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setFee(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setExpirePeriod(value);
      break;
    case 3:
      var value = new proto.massa.api.v1.OperationType;
      reader.readMessage(value,proto.massa.api.v1.OperationType.deserializeBinaryFromReader);
      msg.setOp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.massa.api.v1.Operation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.massa.api.v1.Operation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.massa.api.v1.Operation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.Operation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFee();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getExpirePeriod();
  if (f !== 0) {
    writer.writeFixed64(
      2,
      f
    );
  }
  f = message.getOp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.massa.api.v1.OperationType.serializeBinaryToWriter
    );
  }
};


/**
 * optional fixed64 fee = 1;
 * @return {number}
 */
proto.massa.api.v1.Operation.prototype.getFee = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.api.v1.Operation} returns this
 */
proto.massa.api.v1.Operation.prototype.setFee = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed64 expire_period = 2;
 * @return {number}
 */
proto.massa.api.v1.Operation.prototype.getExpirePeriod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.api.v1.Operation} returns this
 */
proto.massa.api.v1.Operation.prototype.setExpirePeriod = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional OperationType op = 3;
 * @return {?proto.massa.api.v1.OperationType}
 */
proto.massa.api.v1.Operation.prototype.getOp = function() {
  return /** @type{?proto.massa.api.v1.OperationType} */ (
    jspb.Message.getWrapperField(this, proto.massa.api.v1.OperationType, 3));
};


/**
 * @param {?proto.massa.api.v1.OperationType|undefined} value
 * @return {!proto.massa.api.v1.Operation} returns this
*/
proto.massa.api.v1.Operation.prototype.setOp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.massa.api.v1.Operation} returns this
 */
proto.massa.api.v1.Operation.prototype.clearOp = function() {
  return this.setOp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.massa.api.v1.Operation.prototype.hasOp = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.massa.api.v1.OperationType.prototype.toObject = function(opt_includeInstance) {
  return proto.massa.api.v1.OperationType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.massa.api.v1.OperationType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.OperationType.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: (f = msg.getTransaction()) && proto.massa.api.v1.Transaction.toObject(includeInstance, f),
    rollBuy: (f = msg.getRollBuy()) && proto.massa.api.v1.RollBuy.toObject(includeInstance, f),
    rollSell: (f = msg.getRollSell()) && proto.massa.api.v1.RollSell.toObject(includeInstance, f),
    executSc: (f = msg.getExecutSc()) && proto.massa.api.v1.ExecuteSC.toObject(includeInstance, f),
    callSc: (f = msg.getCallSc()) && proto.massa.api.v1.CallSC.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.massa.api.v1.OperationType}
 */
proto.massa.api.v1.OperationType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.massa.api.v1.OperationType;
  return proto.massa.api.v1.OperationType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.massa.api.v1.OperationType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.massa.api.v1.OperationType}
 */
proto.massa.api.v1.OperationType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.massa.api.v1.Transaction;
      reader.readMessage(value,proto.massa.api.v1.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    case 2:
      var value = new proto.massa.api.v1.RollBuy;
      reader.readMessage(value,proto.massa.api.v1.RollBuy.deserializeBinaryFromReader);
      msg.setRollBuy(value);
      break;
    case 3:
      var value = new proto.massa.api.v1.RollSell;
      reader.readMessage(value,proto.massa.api.v1.RollSell.deserializeBinaryFromReader);
      msg.setRollSell(value);
      break;
    case 4:
      var value = new proto.massa.api.v1.ExecuteSC;
      reader.readMessage(value,proto.massa.api.v1.ExecuteSC.deserializeBinaryFromReader);
      msg.setExecutSc(value);
      break;
    case 5:
      var value = new proto.massa.api.v1.CallSC;
      reader.readMessage(value,proto.massa.api.v1.CallSC.deserializeBinaryFromReader);
      msg.setCallSc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.massa.api.v1.OperationType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.massa.api.v1.OperationType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.massa.api.v1.OperationType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.OperationType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.massa.api.v1.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getRollBuy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.massa.api.v1.RollBuy.serializeBinaryToWriter
    );
  }
  f = message.getRollSell();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.massa.api.v1.RollSell.serializeBinaryToWriter
    );
  }
  f = message.getExecutSc();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.massa.api.v1.ExecuteSC.serializeBinaryToWriter
    );
  }
  f = message.getCallSc();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.massa.api.v1.CallSC.serializeBinaryToWriter
    );
  }
};


/**
 * optional Transaction transaction = 1;
 * @return {?proto.massa.api.v1.Transaction}
 */
proto.massa.api.v1.OperationType.prototype.getTransaction = function() {
  return /** @type{?proto.massa.api.v1.Transaction} */ (
    jspb.Message.getWrapperField(this, proto.massa.api.v1.Transaction, 1));
};


/**
 * @param {?proto.massa.api.v1.Transaction|undefined} value
 * @return {!proto.massa.api.v1.OperationType} returns this
*/
proto.massa.api.v1.OperationType.prototype.setTransaction = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.massa.api.v1.OperationType} returns this
 */
proto.massa.api.v1.OperationType.prototype.clearTransaction = function() {
  return this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.massa.api.v1.OperationType.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RollBuy roll_buy = 2;
 * @return {?proto.massa.api.v1.RollBuy}
 */
proto.massa.api.v1.OperationType.prototype.getRollBuy = function() {
  return /** @type{?proto.massa.api.v1.RollBuy} */ (
    jspb.Message.getWrapperField(this, proto.massa.api.v1.RollBuy, 2));
};


/**
 * @param {?proto.massa.api.v1.RollBuy|undefined} value
 * @return {!proto.massa.api.v1.OperationType} returns this
*/
proto.massa.api.v1.OperationType.prototype.setRollBuy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.massa.api.v1.OperationType} returns this
 */
proto.massa.api.v1.OperationType.prototype.clearRollBuy = function() {
  return this.setRollBuy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.massa.api.v1.OperationType.prototype.hasRollBuy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RollSell roll_sell = 3;
 * @return {?proto.massa.api.v1.RollSell}
 */
proto.massa.api.v1.OperationType.prototype.getRollSell = function() {
  return /** @type{?proto.massa.api.v1.RollSell} */ (
    jspb.Message.getWrapperField(this, proto.massa.api.v1.RollSell, 3));
};


/**
 * @param {?proto.massa.api.v1.RollSell|undefined} value
 * @return {!proto.massa.api.v1.OperationType} returns this
*/
proto.massa.api.v1.OperationType.prototype.setRollSell = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.massa.api.v1.OperationType} returns this
 */
proto.massa.api.v1.OperationType.prototype.clearRollSell = function() {
  return this.setRollSell(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.massa.api.v1.OperationType.prototype.hasRollSell = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ExecuteSC execut_sc = 4;
 * @return {?proto.massa.api.v1.ExecuteSC}
 */
proto.massa.api.v1.OperationType.prototype.getExecutSc = function() {
  return /** @type{?proto.massa.api.v1.ExecuteSC} */ (
    jspb.Message.getWrapperField(this, proto.massa.api.v1.ExecuteSC, 4));
};


/**
 * @param {?proto.massa.api.v1.ExecuteSC|undefined} value
 * @return {!proto.massa.api.v1.OperationType} returns this
*/
proto.massa.api.v1.OperationType.prototype.setExecutSc = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.massa.api.v1.OperationType} returns this
 */
proto.massa.api.v1.OperationType.prototype.clearExecutSc = function() {
  return this.setExecutSc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.massa.api.v1.OperationType.prototype.hasExecutSc = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CallSC call_sc = 5;
 * @return {?proto.massa.api.v1.CallSC}
 */
proto.massa.api.v1.OperationType.prototype.getCallSc = function() {
  return /** @type{?proto.massa.api.v1.CallSC} */ (
    jspb.Message.getWrapperField(this, proto.massa.api.v1.CallSC, 5));
};


/**
 * @param {?proto.massa.api.v1.CallSC|undefined} value
 * @return {!proto.massa.api.v1.OperationType} returns this
*/
proto.massa.api.v1.OperationType.prototype.setCallSc = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.massa.api.v1.OperationType} returns this
 */
proto.massa.api.v1.OperationType.prototype.clearCallSc = function() {
  return this.setCallSc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.massa.api.v1.OperationType.prototype.hasCallSc = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.massa.api.v1.Transaction.prototype.toObject = function(opt_includeInstance) {
  return proto.massa.api.v1.Transaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.massa.api.v1.Transaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.Transaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    recipientAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.massa.api.v1.Transaction}
 */
proto.massa.api.v1.Transaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.massa.api.v1.Transaction;
  return proto.massa.api.v1.Transaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.massa.api.v1.Transaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.massa.api.v1.Transaction}
 */
proto.massa.api.v1.Transaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.massa.api.v1.Transaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.massa.api.v1.Transaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.massa.api.v1.Transaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.Transaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecipientAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeFixed64(
      2,
      f
    );
  }
};


/**
 * optional string recipient_address = 1;
 * @return {string}
 */
proto.massa.api.v1.Transaction.prototype.getRecipientAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.massa.api.v1.Transaction} returns this
 */
proto.massa.api.v1.Transaction.prototype.setRecipientAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional fixed64 amount = 2;
 * @return {number}
 */
proto.massa.api.v1.Transaction.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.api.v1.Transaction} returns this
 */
proto.massa.api.v1.Transaction.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.massa.api.v1.RollBuy.prototype.toObject = function(opt_includeInstance) {
  return proto.massa.api.v1.RollBuy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.massa.api.v1.RollBuy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.RollBuy.toObject = function(includeInstance, msg) {
  var f, obj = {
    rollCount: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.massa.api.v1.RollBuy}
 */
proto.massa.api.v1.RollBuy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.massa.api.v1.RollBuy;
  return proto.massa.api.v1.RollBuy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.massa.api.v1.RollBuy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.massa.api.v1.RollBuy}
 */
proto.massa.api.v1.RollBuy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setRollCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.massa.api.v1.RollBuy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.massa.api.v1.RollBuy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.massa.api.v1.RollBuy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.RollBuy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRollCount();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
};


/**
 * optional fixed64 roll_count = 1;
 * @return {number}
 */
proto.massa.api.v1.RollBuy.prototype.getRollCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.api.v1.RollBuy} returns this
 */
proto.massa.api.v1.RollBuy.prototype.setRollCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.massa.api.v1.RollSell.prototype.toObject = function(opt_includeInstance) {
  return proto.massa.api.v1.RollSell.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.massa.api.v1.RollSell} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.RollSell.toObject = function(includeInstance, msg) {
  var f, obj = {
    rollCount: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.massa.api.v1.RollSell}
 */
proto.massa.api.v1.RollSell.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.massa.api.v1.RollSell;
  return proto.massa.api.v1.RollSell.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.massa.api.v1.RollSell} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.massa.api.v1.RollSell}
 */
proto.massa.api.v1.RollSell.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setRollCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.massa.api.v1.RollSell.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.massa.api.v1.RollSell.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.massa.api.v1.RollSell} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.RollSell.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRollCount();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
};


/**
 * optional fixed64 roll_count = 1;
 * @return {number}
 */
proto.massa.api.v1.RollSell.prototype.getRollCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.api.v1.RollSell} returns this
 */
proto.massa.api.v1.RollSell.prototype.setRollCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.massa.api.v1.ExecuteSC.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.massa.api.v1.ExecuteSC.prototype.toObject = function(opt_includeInstance) {
  return proto.massa.api.v1.ExecuteSC.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.massa.api.v1.ExecuteSC} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.ExecuteSC.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64(),
    maxCoins: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxGas: jspb.Message.getFieldWithDefault(msg, 3, 0),
    datastoreList: jspb.Message.toObjectList(msg.getDatastoreList(),
    common_pb.BytesMapFieldEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.massa.api.v1.ExecuteSC}
 */
proto.massa.api.v1.ExecuteSC.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.massa.api.v1.ExecuteSC;
  return proto.massa.api.v1.ExecuteSC.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.massa.api.v1.ExecuteSC} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.massa.api.v1.ExecuteSC}
 */
proto.massa.api.v1.ExecuteSC.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setMaxCoins(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setMaxGas(value);
      break;
    case 4:
      var value = new common_pb.BytesMapFieldEntry;
      reader.readMessage(value,common_pb.BytesMapFieldEntry.deserializeBinaryFromReader);
      msg.addDatastore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.massa.api.v1.ExecuteSC.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.massa.api.v1.ExecuteSC.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.massa.api.v1.ExecuteSC} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.ExecuteSC.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getMaxCoins();
  if (f !== 0) {
    writer.writeFixed64(
      2,
      f
    );
  }
  f = message.getMaxGas();
  if (f !== 0) {
    writer.writeFixed64(
      3,
      f
    );
  }
  f = message.getDatastoreList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      common_pb.BytesMapFieldEntry.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.massa.api.v1.ExecuteSC.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.massa.api.v1.ExecuteSC.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.massa.api.v1.ExecuteSC.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.massa.api.v1.ExecuteSC} returns this
 */
proto.massa.api.v1.ExecuteSC.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional fixed64 max_coins = 2;
 * @return {number}
 */
proto.massa.api.v1.ExecuteSC.prototype.getMaxCoins = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.api.v1.ExecuteSC} returns this
 */
proto.massa.api.v1.ExecuteSC.prototype.setMaxCoins = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional fixed64 max_gas = 3;
 * @return {number}
 */
proto.massa.api.v1.ExecuteSC.prototype.getMaxGas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.api.v1.ExecuteSC} returns this
 */
proto.massa.api.v1.ExecuteSC.prototype.setMaxGas = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated BytesMapFieldEntry datastore = 4;
 * @return {!Array<!proto.massa.api.v1.BytesMapFieldEntry>}
 */
proto.massa.api.v1.ExecuteSC.prototype.getDatastoreList = function() {
  return /** @type{!Array<!proto.massa.api.v1.BytesMapFieldEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.BytesMapFieldEntry, 4));
};


/**
 * @param {!Array<!proto.massa.api.v1.BytesMapFieldEntry>} value
 * @return {!proto.massa.api.v1.ExecuteSC} returns this
*/
proto.massa.api.v1.ExecuteSC.prototype.setDatastoreList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.massa.api.v1.BytesMapFieldEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.massa.api.v1.BytesMapFieldEntry}
 */
proto.massa.api.v1.ExecuteSC.prototype.addDatastore = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.massa.api.v1.BytesMapFieldEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.massa.api.v1.ExecuteSC} returns this
 */
proto.massa.api.v1.ExecuteSC.prototype.clearDatastoreList = function() {
  return this.setDatastoreList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.massa.api.v1.CallSC.prototype.toObject = function(opt_includeInstance) {
  return proto.massa.api.v1.CallSC.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.massa.api.v1.CallSC} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.CallSC.toObject = function(includeInstance, msg) {
  var f, obj = {
    targetAddr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    targetFunc: jspb.Message.getFieldWithDefault(msg, 2, ""),
    param: msg.getParam_asB64(),
    maxGas: jspb.Message.getFieldWithDefault(msg, 4, 0),
    coins: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.massa.api.v1.CallSC}
 */
proto.massa.api.v1.CallSC.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.massa.api.v1.CallSC;
  return proto.massa.api.v1.CallSC.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.massa.api.v1.CallSC} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.massa.api.v1.CallSC}
 */
proto.massa.api.v1.CallSC.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetAddr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetFunc(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setParam(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setMaxGas(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setCoins(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.massa.api.v1.CallSC.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.massa.api.v1.CallSC.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.massa.api.v1.CallSC} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.CallSC.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTargetAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTargetFunc();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getParam_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getMaxGas();
  if (f !== 0) {
    writer.writeFixed64(
      4,
      f
    );
  }
  f = message.getCoins();
  if (f !== 0) {
    writer.writeFixed64(
      5,
      f
    );
  }
};


/**
 * optional string target_addr = 1;
 * @return {string}
 */
proto.massa.api.v1.CallSC.prototype.getTargetAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.massa.api.v1.CallSC} returns this
 */
proto.massa.api.v1.CallSC.prototype.setTargetAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string target_func = 2;
 * @return {string}
 */
proto.massa.api.v1.CallSC.prototype.getTargetFunc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.massa.api.v1.CallSC} returns this
 */
proto.massa.api.v1.CallSC.prototype.setTargetFunc = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes param = 3;
 * @return {!(string|Uint8Array)}
 */
proto.massa.api.v1.CallSC.prototype.getParam = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes param = 3;
 * This is a type-conversion wrapper around `getParam()`
 * @return {string}
 */
proto.massa.api.v1.CallSC.prototype.getParam_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getParam()));
};


/**
 * optional bytes param = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getParam()`
 * @return {!Uint8Array}
 */
proto.massa.api.v1.CallSC.prototype.getParam_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getParam()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.massa.api.v1.CallSC} returns this
 */
proto.massa.api.v1.CallSC.prototype.setParam = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional fixed64 max_gas = 4;
 * @return {number}
 */
proto.massa.api.v1.CallSC.prototype.getMaxGas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.api.v1.CallSC} returns this
 */
proto.massa.api.v1.CallSC.prototype.setMaxGas = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional fixed64 coins = 5;
 * @return {number}
 */
proto.massa.api.v1.CallSC.prototype.getCoins = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.api.v1.CallSC} returns this
 */
proto.massa.api.v1.CallSC.prototype.setCoins = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.massa.api.v1.SignedOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.massa.api.v1.SignedOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.massa.api.v1.SignedOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.SignedOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: (f = msg.getContent()) && proto.massa.api.v1.Operation.toObject(includeInstance, f),
    signature: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contentCreatorPubKey: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contentCreatorAddress: jspb.Message.getFieldWithDefault(msg, 4, ""),
    id: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.massa.api.v1.SignedOperation}
 */
proto.massa.api.v1.SignedOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.massa.api.v1.SignedOperation;
  return proto.massa.api.v1.SignedOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.massa.api.v1.SignedOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.massa.api.v1.SignedOperation}
 */
proto.massa.api.v1.SignedOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.massa.api.v1.Operation;
      reader.readMessage(value,proto.massa.api.v1.Operation.deserializeBinaryFromReader);
      msg.setContent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignature(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContentCreatorPubKey(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContentCreatorAddress(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.massa.api.v1.SignedOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.massa.api.v1.SignedOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.massa.api.v1.SignedOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.SignedOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.massa.api.v1.Operation.serializeBinaryToWriter
    );
  }
  f = message.getSignature();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContentCreatorPubKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContentCreatorAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional Operation content = 1;
 * @return {?proto.massa.api.v1.Operation}
 */
proto.massa.api.v1.SignedOperation.prototype.getContent = function() {
  return /** @type{?proto.massa.api.v1.Operation} */ (
    jspb.Message.getWrapperField(this, proto.massa.api.v1.Operation, 1));
};


/**
 * @param {?proto.massa.api.v1.Operation|undefined} value
 * @return {!proto.massa.api.v1.SignedOperation} returns this
*/
proto.massa.api.v1.SignedOperation.prototype.setContent = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.massa.api.v1.SignedOperation} returns this
 */
proto.massa.api.v1.SignedOperation.prototype.clearContent = function() {
  return this.setContent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.massa.api.v1.SignedOperation.prototype.hasContent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string signature = 2;
 * @return {string}
 */
proto.massa.api.v1.SignedOperation.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.massa.api.v1.SignedOperation} returns this
 */
proto.massa.api.v1.SignedOperation.prototype.setSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string content_creator_pub_key = 3;
 * @return {string}
 */
proto.massa.api.v1.SignedOperation.prototype.getContentCreatorPubKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.massa.api.v1.SignedOperation} returns this
 */
proto.massa.api.v1.SignedOperation.prototype.setContentCreatorPubKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string content_creator_address = 4;
 * @return {string}
 */
proto.massa.api.v1.SignedOperation.prototype.getContentCreatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.massa.api.v1.SignedOperation} returns this
 */
proto.massa.api.v1.SignedOperation.prototype.setContentCreatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string id = 5;
 * @return {string}
 */
proto.massa.api.v1.SignedOperation.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.massa.api.v1.SignedOperation} returns this
 */
proto.massa.api.v1.SignedOperation.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.massa.api.v1.OperationWrapper.repeatedFields_ = [3,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.massa.api.v1.OperationWrapper.prototype.toObject = function(opt_includeInstance) {
  return proto.massa.api.v1.OperationWrapper.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.massa.api.v1.OperationWrapper} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.OperationWrapper.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blockIdsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    thread: jspb.Message.getFieldWithDefault(msg, 5, 0),
    operation: (f = msg.getOperation()) && proto.massa.api.v1.SignedOperation.toObject(includeInstance, f),
    statusList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.massa.api.v1.OperationWrapper}
 */
proto.massa.api.v1.OperationWrapper.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.massa.api.v1.OperationWrapper;
  return proto.massa.api.v1.OperationWrapper.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.massa.api.v1.OperationWrapper} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.massa.api.v1.OperationWrapper}
 */
proto.massa.api.v1.OperationWrapper.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addBlockIds(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setThread(value);
      break;
    case 6:
      var value = new proto.massa.api.v1.SignedOperation;
      reader.readMessage(value,proto.massa.api.v1.SignedOperation.deserializeBinaryFromReader);
      msg.setOperation(value);
      break;
    case 7:
      var values = /** @type {!Array<!proto.massa.api.v1.OperationStatus>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStatus(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.massa.api.v1.OperationWrapper.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.massa.api.v1.OperationWrapper.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.massa.api.v1.OperationWrapper} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.api.v1.OperationWrapper.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlockIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getThread();
  if (f !== 0) {
    writer.writeFixed32(
      5,
      f
    );
  }
  f = message.getOperation();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.massa.api.v1.SignedOperation.serializeBinaryToWriter
    );
  }
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writePackedEnum(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.massa.api.v1.OperationWrapper.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.massa.api.v1.OperationWrapper} returns this
 */
proto.massa.api.v1.OperationWrapper.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string block_ids = 3;
 * @return {!Array<string>}
 */
proto.massa.api.v1.OperationWrapper.prototype.getBlockIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.massa.api.v1.OperationWrapper} returns this
 */
proto.massa.api.v1.OperationWrapper.prototype.setBlockIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.massa.api.v1.OperationWrapper} returns this
 */
proto.massa.api.v1.OperationWrapper.prototype.addBlockIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.massa.api.v1.OperationWrapper} returns this
 */
proto.massa.api.v1.OperationWrapper.prototype.clearBlockIdsList = function() {
  return this.setBlockIdsList([]);
};


/**
 * optional fixed32 thread = 5;
 * @return {number}
 */
proto.massa.api.v1.OperationWrapper.prototype.getThread = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.api.v1.OperationWrapper} returns this
 */
proto.massa.api.v1.OperationWrapper.prototype.setThread = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional SignedOperation operation = 6;
 * @return {?proto.massa.api.v1.SignedOperation}
 */
proto.massa.api.v1.OperationWrapper.prototype.getOperation = function() {
  return /** @type{?proto.massa.api.v1.SignedOperation} */ (
    jspb.Message.getWrapperField(this, proto.massa.api.v1.SignedOperation, 6));
};


/**
 * @param {?proto.massa.api.v1.SignedOperation|undefined} value
 * @return {!proto.massa.api.v1.OperationWrapper} returns this
*/
proto.massa.api.v1.OperationWrapper.prototype.setOperation = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.massa.api.v1.OperationWrapper} returns this
 */
proto.massa.api.v1.OperationWrapper.prototype.clearOperation = function() {
  return this.setOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.massa.api.v1.OperationWrapper.prototype.hasOperation = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated OperationStatus status = 7;
 * @return {!Array<!proto.massa.api.v1.OperationStatus>}
 */
proto.massa.api.v1.OperationWrapper.prototype.getStatusList = function() {
  return /** @type {!Array<!proto.massa.api.v1.OperationStatus>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<!proto.massa.api.v1.OperationStatus>} value
 * @return {!proto.massa.api.v1.OperationWrapper} returns this
 */
proto.massa.api.v1.OperationWrapper.prototype.setStatusList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!proto.massa.api.v1.OperationStatus} value
 * @param {number=} opt_index
 * @return {!proto.massa.api.v1.OperationWrapper} returns this
 */
proto.massa.api.v1.OperationWrapper.prototype.addStatus = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.massa.api.v1.OperationWrapper} returns this
 */
proto.massa.api.v1.OperationWrapper.prototype.clearStatusList = function() {
  return this.setStatusList([]);
};


/**
 * @enum {number}
 */
proto.massa.api.v1.OperationStatus = {
  OPERATION_STATUS_UNSPECIFIED: 0,
  OPERATION_STATUS_PENDING: 1,
  OPERATION_STATUS_FINAL: 2,
  OPERATION_STATUS_SUCCESS: 3,
  OPERATION_STATUS_FAILURE: 4,
  OPERATION_STATUS_UNKNOWN: 5
};

goog.object.extend(exports, proto.massa.api.v1);
